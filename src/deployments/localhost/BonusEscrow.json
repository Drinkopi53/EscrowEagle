{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "acceptor",
          "type": "address"
        }
      ],
      "name": "BountyAccepted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "BountyCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "githubUrl",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "BountyCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "BountyPaid",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bountyId",
          "type": "uint256"
        }
      ],
      "name": "acceptBounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bountyId",
          "type": "uint256"
        }
      ],
      "name": "completeBounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_githubUrl",
          "type": "string"
        }
      ],
      "name": "createBounty",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllBounties",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "githubUrl",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            },
            {
              "internalType": "enum BonusEscrow.Status",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "acceptor",
              "type": "address"
            }
          ],
          "internalType": "struct BonusEscrow.Bounty[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bountyId",
          "type": "uint256"
        }
      ],
      "name": "getBountyStatus",
      "outputs": [
        {
          "internalType": "enum BonusEscrow.Status",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bountyId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_winner",
          "type": "address"
        }
      ],
      "name": "payBounty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd006d0ef26b18d2fd2b84d63099715b89bca5400497e2dbea4985e869784838f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "1574973",
    "logsBloom": "0x
    "blockHash": "0x953af2cb1fb06faee519e60954835e23821dedb9c360a9e6d3777a87c9c24bf6",
    "transactionHash": "0xd006d0ef26b18d2fd2b84d63099715b89bca5400497e2dbea4985e869784838f",
    "logs": [],
    "blockNumber": 5,
    "cumulativeGasUsed": "1574973",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "a648f63511b0fb342b277165509392ab",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"acceptor\",\"type\":\"address\"}],\"name\":\"BountyAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"BountyCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"githubUrl\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"BountyCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"BountyPaid\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bountyId\",\"type\":\"uint256\"}],\"name\":\"acceptBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bountyId\",\"type\":\"uint256\"}],\"name\":\"completeBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_githubUrl\",\"type\":\"string\"}],\"name\":\"createBounty\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllBounties\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"githubUrl\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"enum BonusEscrow.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"acceptor\",\"type\":\"address\"}],\"internalType\":\"struct BonusEscrow.Bounty[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bountyId\",\"type\":\"uint256\"}],\"name\":\"getBountyStatus\",\"outputs\":[{\"internalType\":\"enum BonusEscrow.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bountyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_winner\",\"type\":\"address\"}],\"name\":\"payBounty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BonusEscrow.sol\":\"BonusEscrow\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BonusEscrow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n// Future unit tests would typically be created in a separate file\\r\\n// in a Hardhat project (e.g., test/BonusEscrow.t.sol).\\r\\n// For this task, actual test files will not be created.\\r\\n//\\r\\n// Test cases would include:\\r\\n// - Deployment:\\r\\n//   - Check if the owner is set correctly.\\r\\n// - Deposit:\\r\\n//   - Check if ETH can be deposited.\\r\\n//   - Check if the contract balance increases after deposit.\\r\\n//   - Check if events are emitted correctly (if any).\\r\\n// - Access Control:\\r\\n//   - Ensure only the owner can call owner-restricted functions (if any).\\r\\n\\r\\ncontract BonusEscrow {\\r\\n    address public owner;\\r\\n\\r\\n    constructor() {\\r\\n        owner = msg.sender;\\r\\n        nextBountyId = 0;\\r\\n    }\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Only owner can call this function\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    struct Bounty {\\r\\n        uint256 id;\\r\\n        address creator;\\r\\n        string title;\\r\\n        string githubUrl;\\r\\n        uint256 reward;\\r\\n        Status status;\\r\\n        address acceptor; // New field to store the address of the client who accepted the bounty\\r\\n    }\\r\\n\\r\\n    enum Status { Open, Accepted, Completed, Paid }\\r\\n\\r\\n    uint256 nextBountyId;\\r\\n    mapping(uint256 => Bounty) bounties;\\r\\n    uint256[] bountyIds;\\r\\n\\r\\n    event BountyCreated(\\r\\n        uint256 indexed id,\\r\\n        address indexed creator,\\r\\n        string title,\\r\\n        string githubUrl,\\r\\n        uint256 reward\\r\\n    );\\r\\n    event BountyAccepted(uint256 indexed id, address indexed acceptor);\\r\\n    event BountyCompleted(uint256 indexed id);\\r\\n    event BountyPaid(uint256 indexed id, address indexed winner);\\r\\n\\r\\n    function createBounty(\\r\\n        string memory _title,\\r\\n        string memory _githubUrl\\r\\n    ) public payable {\\r\\n        require(msg.value > 0, \\\"Bounty must have a reward\\\");\\r\\n\\r\\n        uint256 id = nextBountyId++;\\r\\n        bounties[id] = Bounty({\\r\\n            id: id,\\r\\n            creator: msg.sender,\\r\\n            title: _title,\\r\\n            githubUrl: _githubUrl,\\r\\n            reward: msg.value,\\r\\n            status: Status.Open,\\r\\n            acceptor: address(0)\\r\\n        });\\r\\n        bountyIds.push(id);\\r\\n\\r\\n        emit BountyCreated(id, msg.sender, _title, _githubUrl, msg.value);\\r\\n    }\\r\\n\\r\\n    function getBountyStatus(uint256 _bountyId) public view returns (Status) {\\r\\n        require(_bountyId < nextBountyId, \\\"Bounty does not exist\\\");\\r\\n        return bounties[_bountyId].status;\\r\\n    }\\r\\n\\r\\n    function getAllBounties() public view returns (Bounty[] memory) {\\r\\n        Bounty[] memory allBounties = new Bounty[](bountyIds.length);\\r\\n        for (uint256 i = 0; i < bountyIds.length; i++) {\\r\\n            allBounties[i] = bounties[bountyIds[i]];\\r\\n        }\\r\\n        return allBounties;\\r\\n    }\\r\\n\\r\\n    function acceptBounty(uint256 _bountyId) public {\\r\\n        require(bounties[_bountyId].status == Status.Open, \\\"Bounty is not open\\\");\\r\\n        // Removed: require(msg.sender == bounties[_bountyId].creator, \\\"Only bounty creator can accept bounty\\\");\\r\\n        // Now any client can accept an open bounty.\\r\\n        bounties[_bountyId].status = Status.Accepted;\\r\\n        bounties[_bountyId].acceptor = msg.sender; // Store the acceptor's address (msg.sender is the client)\\r\\n        emit BountyAccepted(_bountyId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function completeBounty(uint256 _bountyId) public {\\r\\n        require(bounties[_bountyId].status == Status.Accepted, \\\"Bounty is not accepted\\\");\\r\\n        require(msg.sender == bounties[_bountyId].acceptor, \\\"Only bounty acceptor can complete bounty\\\");\\r\\n        bounties[_bountyId].status = Status.Completed;\\r\\n        emit BountyCompleted(_bountyId);\\r\\n    }\\r\\n\\r\\n    function payBounty(uint256 _bountyId, address _winner) public onlyOwner {\\r\\n        require(bounties[_bountyId].status == Status.Completed, \\\"Bounty is not completed\\\");\\r\\n        require(bounties[_bountyId].reward > 0, \\\"Bounty has no reward\\\");\\r\\n\\r\\n        // Transfer reward to the winner\\r\\n        payable(_winner).transfer(bounties[_bountyId].reward);\\r\\n        bounties[_bountyId].status = Status.Paid;\\r\\n        emit BountyPaid(_bountyId, _winner);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xa213a7ab50e6e89b06bc0872e161d5bd43038ce7adb7e9a4f5b5d00f9f3c74ff\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600181905550611b2d806100686000396000f3fe6080604052600436106100705760003560e01c8063ab643c071161004e578063ab643c07146100e5578063cca0f8ab14610110578063e74205f614610139578063f789493d1461017657610070565b8063139005ab146100755780636d2008a51461009e5780638da5cb5b146100ba575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610db1565b61019f565b005b6100b860048036038101906100b39190610f24565b61033b565b005b3480156100c657600080fd5b506100cf6105a0565b6040516100dc9190610fdd565b60405180910390f35b3480156100f157600080fd5b506100fa6105c4565b6040516101079190611271565b60405180910390f35b34801561011c57600080fd5b50610137600480360381019061013291906112bf565b6108c1565b005b34801561014557600080fd5b50610160600480360381019061015b9190610db1565b610b16565b60405161016d919061130e565b60405180910390f35b34801561018257600080fd5b5061019d60048036038101906101989190610db1565b610b87565b005b600160038111156101b3576101b26110c1565b5b6002600083815260200190815260200160002060050160009054906101000a900460ff1660038111156101e9576101e86110c1565b5b14610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090611386565b60405180910390fd5b6002600082815260200190815260200160002060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c490611418565b60405180910390fd5b600280600083815260200190815260200160002060050160006101000a81548160ff02191690836003811115610306576103056110c1565b5b0217905550807f687045981c43db01605c41aa9dbf9296e20e6848624353e83979327e96434ccc60405160405180910390a250565b6000341161037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037590611484565b60405180910390fd5b600060016000815480929190610393906114d3565b9190505590506040518060e001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001348152602001600060038111156103ec576103eb6110c1565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600260008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816104859190611727565b50606082015181600301908161049b9190611727565b506080820151816004015560a08201518160050160006101000a81548160ff021916908360038111156104d1576104d06110c1565b5b021790555060c08201518160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060038190806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16817e26518e234dedc787bbadc9bb934c92fe94158272cc2c9bba9b23f3010a8d1585853460405161059393929190611841565b60405180910390a3505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600060038054905067ffffffffffffffff8111156105e7576105e6610df9565b5b60405190808252806020026020018201604052801561062057816020015b61060d610cec565b8152602001906001900390816106055790505b50905060005b6003805490508110156108b957600260006003838154811061064b5761064a611886565b5b906000526020600020015481526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546106df9061154a565b80601f016020809104026020016040519081016040528092919081815260200182805461070b9061154a565b80156107585780601f1061072d57610100808354040283529160200191610758565b820191906000526020600020905b81548152906001019060200180831161073b57829003601f168201915b505050505081526020016003820180546107719061154a565b80601f016020809104026020016040519081016040528092919081815260200182805461079d9061154a565b80156107ea5780601f106107bf576101008083540402835291602001916107ea565b820191906000526020600020905b8154815290600101906020018083116107cd57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff166003811115610822576108216110c1565b5b6003811115610834576108336110c1565b5b81526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508282815181106108a1576108a0611886565b5b60200260200101819052508080600101915050610626565b508091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461094f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094690611927565b60405180910390fd5b60026003811115610963576109626110c1565b5b6002600084815260200190815260200160002060050160009054906101000a900460ff166003811115610999576109986110c1565b5b146109d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d090611993565b60405180910390fd5b6000600260008481526020019081526020016000206004015411610a32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a29906119ff565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc60026000858152602001908152602001600020600401549081150290604051600060405180830381858888f19350505050158015610a8e573d6000803e3d6000fd5b5060036002600084815260200190815260200160002060050160006101000a81548160ff02191690836003811115610ac957610ac86110c1565b5b02179055508073ffffffffffffffffffffffffffffffffffffffff16827fb36d901fccb6f536689eeb11a0ae1432218e5e52acaf7a8e7eb7693197fb3fae60405160405180910390a35050565b60006001548210610b5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5390611a6b565b60405180910390fd5b6002600083815260200190815260200160002060050160009054906101000a900460ff169050919050565b60006003811115610b9b57610b9a6110c1565b5b6002600083815260200190815260200160002060050160009054906101000a900460ff166003811115610bd157610bd06110c1565b5b14610c11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0890611ad7565b60405180910390fd5b60016002600083815260200190815260200160002060050160006101000a81548160ff02191690836003811115610c4b57610c4a6110c1565b5b0217905550336002600083815260200190815260200160002060050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16817f10cf4effd391a16fea8d16ab98738933863c3117eba5ebca0cb226a1abf5c9c960405160405180910390a350565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160006003811115610d4457610d436110c1565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d8e81610d7b565b8114610d9957600080fd5b50565b600081359050610dab81610d85565b92915050565b600060208284031215610dc757610dc6610d71565b5b6000610dd584828501610d9c565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e3182610de8565b810181811067ffffffffffffffff82111715610e5057610e4f610df9565b5b80604052505050565b6000610e63610d67565b9050610e6f8282610e28565b919050565b600067ffffffffffffffff821115610e8f57610e8e610df9565b5b610e9882610de8565b9050602081019050919050565b82818337600083830152505050565b6000610ec7610ec284610e74565b610e59565b905082815260208101848484011115610ee357610ee2610de3565b5b610eee848285610ea5565b509392505050565b600082601f830112610f0b57610f0a610dde565b5b8135610f1b848260208601610eb4565b91505092915050565b60008060408385031215610f3b57610f3a610d71565b5b600083013567ffffffffffffffff811115610f5957610f58610d76565b5b610f6585828601610ef6565b925050602083013567ffffffffffffffff811115610f8657610f85610d76565b5b610f9285828601610ef6565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fc782610f9c565b9050919050565b610fd781610fbc565b82525050565b6000602082019050610ff26000830184610fce565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61102d81610d7b565b82525050565b61103c81610fbc565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561107c578082015181840152602081019050611061565b60008484015250505050565b600061109382611042565b61109d818561104d565b93506110ad81856020860161105e565b6110b681610de8565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611101576111006110c1565b5b50565b6000819050611112826110f0565b919050565b600061112282611104565b9050919050565b61113281611117565b82525050565b600060e0830160008301516111506000860182611024565b5060208301516111636020860182611033565b506040830151848203604086015261117b8282611088565b915050606083015184820360608601526111958282611088565b91505060808301516111aa6080860182611024565b5060a08301516111bd60a0860182611129565b5060c08301516111d060c0860182611033565b508091505092915050565b60006111e78383611138565b905092915050565b6000602082019050919050565b600061120782610ff8565b6112118185611003565b93508360208202850161122385611014565b8060005b8581101561125f578484038952815161124085826111db565b945061124b836111ef565b925060208a01995050600181019050611227565b50829750879550505050505092915050565b6000602082019050818103600083015261128b81846111fc565b905092915050565b61129c81610fbc565b81146112a757600080fd5b50565b6000813590506112b981611293565b92915050565b600080604083850312156112d6576112d5610d71565b5b60006112e485828601610d9c565b92505060206112f5858286016112aa565b9150509250929050565b61130881611117565b82525050565b600060208201905061132360008301846112ff565b92915050565b600082825260208201905092915050565b7f426f756e7479206973206e6f7420616363657074656400000000000000000000600082015250565b6000611370601683611329565b915061137b8261133a565b602082019050919050565b6000602082019050818103600083015261139f81611363565b9050919050565b7f4f6e6c7920626f756e7479206163636570746f722063616e20636f6d706c657460008201527f6520626f756e7479000000000000000000000000000000000000000000000000602082015250565b6000611402602883611329565b915061140d826113a6565b604082019050919050565b60006020820190508181036000830152611431816113f5565b9050919050565b7f426f756e7479206d757374206861766520612072657761726400000000000000600082015250565b600061146e601983611329565b915061147982611438565b602082019050919050565b6000602082019050818103600083015261149d81611461565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114de82610d7b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115105761150f6114a4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061156257607f821691505b6020821081036115755761157461151b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826115a0565b6115e786836115a0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061162461161f61161a84610d7b565b6115ff565b610d7b565b9050919050565b6000819050919050565b61163e83611609565b61165261164a8261162b565b8484546115ad565b825550505050565b600090565b61166761165a565b611672818484611635565b505050565b5b818110156116965761168b60008261165f565b600181019050611678565b5050565b601f8211156116db576116ac8161157b565b6116b584611590565b810160208510156116c4578190505b6116d86116d085611590565b830182611677565b50505b505050565b600082821c905092915050565b60006116fe600019846008026116e0565b1980831691505092915050565b600061171783836116ed565b9150826002028217905092915050565b61173082611042565b67ffffffffffffffff81111561174957611748610df9565b5b611753825461154a565b61175e82828561169a565b600060209050601f831160018114611791576000841561177f578287015190505b611789858261170b565b8655506117f1565b601f19841661179f8661157b565b60005b828110156117c7578489015182556001820191506020850194506020810190506117a2565b868310156117e457848901516117e0601f8916826116ed565b8355505b6001600288020188555050505b505050505050565b600061180482611042565b61180e8185611329565b935061181e81856020860161105e565b61182781610de8565b840191505092915050565b61183b81610d7b565b82525050565b6000606082019050818103600083015261185b81866117f9565b9050818103602083015261186f81856117f9565b905061187e6040830184611832565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000611911602183611329565b915061191c826118b5565b604082019050919050565b6000602082019050818103600083015261194081611904565b9050919050565b7f426f756e7479206973206e6f7420636f6d706c65746564000000000000000000600082015250565b600061197d601783611329565b915061198882611947565b602082019050919050565b600060208201905081810360008301526119ac81611970565b9050919050565b7f426f756e747920686173206e6f20726577617264000000000000000000000000600082015250565b60006119e9601483611329565b91506119f4826119b3565b602082019050919050565b60006020820190508181036000830152611a18816119dc565b9050919050565b7f426f756e747920646f6573206e6f742065786973740000000000000000000000600082015250565b6000611a55601583611329565b9150611a6082611a1f565b602082019050919050565b60006020820190508181036000830152611a8481611a48565b9050919050565b7f426f756e7479206973206e6f74206f70656e0000000000000000000000000000600082015250565b6000611ac1601283611329565b9150611acc82611a8b565b602082019050919050565b60006020820190508181036000830152611af081611ab4565b905091905056fea26469706673582212208c7a9f5df0551d2602b9a93ef48acf2218ffe53c8fe0bec8a4925d922c3a6a5564736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c8063ab643c071161004e578063ab643c07146100e5578063cca0f8ab14610110578063e74205f614610139578063f789493d1461017657610070565b8063139005ab146100755780636d2008a51461009e5780638da5cb5b146100ba575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610db1565b61019f565b005b6100b860048036038101906100b39190610f24565b61033b565b005b3480156100c657600080fd5b506100cf6105a0565b6040516100dc9190610fdd565b60405180910390f35b3480156100f157600080fd5b506100fa6105c4565b6040516101079190611271565b60405180910390f35b34801561011c57600080fd5b50610137600480360381019061013291906112bf565b6108c1565b005b34801561014557600080fd5b50610160600480360381019061015b9190610db1565b610b16565b60405161016d919061130e565b60405180910390f35b34801561018257600080fd5b5061019d60048036038101906101989190610db1565b610b87565b005b600160038111156101b3576101b26110c1565b5b6002600083815260200190815260200160002060050160009054906101000a900460ff1660038111156101e9576101e86110c1565b5b14610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090611386565b60405180910390fd5b6002600082815260200190815260200160002060050160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102c490611418565b60405180910390fd5b600280600083815260200190815260200160002060050160006101000a81548160ff02191690836003811115610306576103056110c1565b5b0217905550807f687045981c43db01605c41aa9dbf9296e20e6848624353e83979327e96434ccc60405160405180910390a250565b6000341161037e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037590611484565b60405180910390fd5b600060016000815480929190610393906114d3565b9190505590506040518060e001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001348152602001600060038111156103ec576103eb6110c1565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600260008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190816104859190611727565b50606082015181600301908161049b9190611727565b506080820151816004015560a08201518160050160006101000a81548160ff021916908360038111156104d1576104d06110c1565b5b021790555060c08201518160050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060038190806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16817e26518e234dedc787bbadc9bb934c92fe94158272cc2c9bba9b23f3010a8d1585853460405161059393929190611841565b60405180910390a3505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600060038054905067ffffffffffffffff8111156105e7576105e6610df9565b5b60405190808252806020026020018201604052801561062057816020015b61060d610cec565b8152602001906001900390816106055790505b50905060005b6003805490508110156108b957600260006003838154811061064b5761064a611886565b5b906000526020600020015481526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546106df9061154a565b80601f016020809104026020016040519081016040528092919081815260200182805461070b9061154a565b80156107585780601f1061072d57610100808354040283529160200191610758565b820191906000526020600020905b81548152906001019060200180831161073b57829003601f168201915b505050505081526020016003820180546107719061154a565b80601f016020809104026020016040519081016040528092919081815260200182805461079d9061154a565b80156107ea5780601f106107bf576101008083540402835291602001916107ea565b820191906000526020600020905b8154815290600101906020018083116107cd57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff166003811115610822576108216110c1565b5b6003811115610834576108336110c1565b5b81526020016005820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508282815181106108a1576108a0611886565b5b60200260200101819052508080600101915050610626565b508091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461094f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094690611927565b60405180910390fd5b60026003811115610963576109626110c1565b5b6002600084815260200190815260200160002060050160009054906101000a900460ff166003811115610999576109986110c1565b5b146109d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d090611993565b60405180910390fd5b6000600260008481526020019081526020016000206004015411610a32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a29906119ff565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc60026000858152602001908152602001600020600401549081150290604051600060405180830381858888f19350505050158015610a8e573d6000803e3d6000fd5b5060036002600084815260200190815260200160002060050160006101000a81548160ff02191690836003811115610ac957610ac86110c1565b5b02179055508073ffffffffffffffffffffffffffffffffffffffff16827fb36d901fccb6f536689eeb11a0ae1432218e5e52acaf7a8e7eb7693197fb3fae60405160405180910390a35050565b60006001548210610b5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5390611a6b565b60405180910390fd5b6002600083815260200190815260200160002060050160009054906101000a900460ff169050919050565b60006003811115610b9b57610b9a6110c1565b5b6002600083815260200190815260200160002060050160009054906101000a900460ff166003811115610bd157610bd06110c1565b5b14610c11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0890611ad7565b60405180910390fd5b60016002600083815260200190815260200160002060050160006101000a81548160ff02191690836003811115610c4b57610c4a6110c1565b5b0217905550336002600083815260200190815260200160002060050160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff16817f10cf4effd391a16fea8d16ab98738933863c3117eba5ebca0cb226a1abf5c9c960405160405180910390a350565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081526020016000815260200160006003811115610d4457610d436110c1565b5b8152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d8e81610d7b565b8114610d9957600080fd5b50565b600081359050610dab81610d85565b92915050565b600060208284031215610dc757610dc6610d71565b5b6000610dd584828501610d9c565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e3182610de8565b810181811067ffffffffffffffff82111715610e5057610e4f610df9565b5b80604052505050565b6000610e63610d67565b9050610e6f8282610e28565b919050565b600067ffffffffffffffff821115610e8f57610e8e610df9565b5b610e9882610de8565b9050602081019050919050565b82818337600083830152505050565b6000610ec7610ec284610e74565b610e59565b905082815260208101848484011115610ee357610ee2610de3565b5b610eee848285610ea5565b509392505050565b600082601f830112610f0b57610f0a610dde565b5b8135610f1b848260208601610eb4565b91505092915050565b60008060408385031215610f3b57610f3a610d71565b5b600083013567ffffffffffffffff811115610f5957610f58610d76565b5b610f6585828601610ef6565b925050602083013567ffffffffffffffff811115610f8657610f85610d76565b5b610f9285828601610ef6565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fc782610f9c565b9050919050565b610fd781610fbc565b82525050565b6000602082019050610ff26000830184610fce565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61102d81610d7b565b82525050565b61103c81610fbc565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561107c578082015181840152602081019050611061565b60008484015250505050565b600061109382611042565b61109d818561104d565b93506110ad81856020860161105e565b6110b681610de8565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611101576111006110c1565b5b50565b6000819050611112826110f0565b919050565b600061112282611104565b9050919050565b61113281611117565b82525050565b600060e0830160008301516111506000860182611024565b5060208301516111636020860182611033565b506040830151848203604086015261117b8282611088565b915050606083015184820360608601526111958282611088565b91505060808301516111aa6080860182611024565b5060a08301516111bd60a0860182611129565b5060c08301516111d060c0860182611033565b508091505092915050565b60006111e78383611138565b905092915050565b6000602082019050919050565b600061120782610ff8565b6112118185611003565b93508360208202850161122385611014565b8060005b8581101561125f578484038952815161124085826111db565b945061124b836111ef565b925060208a01995050600181019050611227565b50829750879550505050505092915050565b6000602082019050818103600083015261128b81846111fc565b905092915050565b61129c81610fbc565b81146112a757600080fd5b50565b6000813590506112b981611293565b92915050565b600080604083850312156112d6576112d5610d71565b5b60006112e485828601610d9c565b92505060206112f5858286016112aa565b9150509250929050565b61130881611117565b82525050565b600060208201905061132360008301846112ff565b92915050565b600082825260208201905092915050565b7f426f756e7479206973206e6f7420616363657074656400000000000000000000600082015250565b6000611370601683611329565b915061137b8261133a565b602082019050919050565b6000602082019050818103600083015261139f81611363565b9050919050565b7f4f6e6c7920626f756e7479206163636570746f722063616e20636f6d706c657460008201527f6520626f756e7479000000000000000000000000000000000000000000000000602082015250565b6000611402602883611329565b915061140d826113a6565b604082019050919050565b60006020820190508181036000830152611431816113f5565b9050919050565b7f426f756e7479206d757374206861766520612072657761726400000000000000600082015250565b600061146e601983611329565b915061147982611438565b602082019050919050565b6000602082019050818103600083015261149d81611461565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114de82610d7b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036115105761150f6114a4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061156257607f821691505b6020821081036115755761157461151b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115dd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826115a0565b6115e786836115a0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061162461161f61161a84610d7b565b6115ff565b610d7b565b9050919050565b6000819050919050565b61163e83611609565b61165261164a8261162b565b8484546115ad565b825550505050565b600090565b61166761165a565b611672818484611635565b505050565b5b818110156116965761168b60008261165f565b600181019050611678565b5050565b601f8211156116db576116ac8161157b565b6116b584611590565b810160208510156116c4578190505b6116d86116d085611590565b830182611677565b50505b505050565b600082821c905092915050565b60006116fe600019846008026116e0565b1980831691505092915050565b600061171783836116ed565b9150826002028217905092915050565b61173082611042565b67ffffffffffffffff81111561174957611748610df9565b5b611753825461154a565b61175e82828561169a565b600060209050601f831160018114611791576000841561177f578287015190505b611789858261170b565b8655506117f1565b601f19841661179f8661157b565b60005b828110156117c7578489015182556001820191506020850194506020810190506117a2565b868310156117e457848901516117e0601f8916826116ed565b8355505b6001600288020188555050505b505050505050565b600061180482611042565b61180e8185611329565b935061181e81856020860161105e565b61182781610de8565b840191505092915050565b61183b81610d7b565b82525050565b6000606082019050818103600083015261185b81866117f9565b9050818103602083015261186f81856117f9565b905061187e6040830184611832565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000611911602183611329565b915061191c826118b5565b604082019050919050565b6000602082019050818103600083015261194081611904565b9050919050565b7f426f756e7479206973206e6f7420636f6d706c65746564000000000000000000600082015250565b600061197d601783611329565b915061198882611947565b602082019050919050565b600060208201905081810360008301526119ac81611970565b9050919050565b7f426f756e747920686173206e6f20726577617264000000000000000000000000600082015250565b60006119e9601483611329565b91506119f4826119b3565b602082019050919050565b60006020820190508181036000830152611a18816119dc565b9050919050565b7f426f756e747920646f6573206e6f742065786973740000000000000000000000600082015250565b6000611a55601583611329565b9150611a6082611a1f565b602082019050919050565b60006020820190508181036000830152611a8481611a48565b9050919050565b7f426f756e7479206973206e6f74206f70656e0000000000000000000000000000600082015250565b6000611ac1601283611329565b9150611acc82611a8b565b602082019050919050565b60006020820190508181036000830152611af081611ab4565b905091905056fea26469706673582212208c7a9f5df0551d2602b9a93ef48acf2218ffe53c8fe0bec8a4925d922c3a6a5564736f6c63430008180033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/BonusEscrow.sol:BonusEscrow",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 51,
        "contract": "contracts/BonusEscrow.sol:BonusEscrow",
        "label": "nextBountyId",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 56,
        "contract": "contracts/BonusEscrow.sol:BonusEscrow",
        "label": "bounties",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Bounty)44_storage)"
      },
      {
        "astId": 59,
        "contract": "contracts/BonusEscrow.sol:BonusEscrow",
        "label": "bountyIds",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_enum(Status)49": {
        "encoding": "inplace",
        "label": "enum BonusEscrow.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_struct(Bounty)44_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct BonusEscrow.Bounty)",
        "numberOfBytes": "32",
        "value": "t_struct(Bounty)44_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Bounty)44_storage": {
        "encoding": "inplace",
        "label": "struct BonusEscrow.Bounty",
        "members": [
          {
            "astId": 30,
            "contract": "contracts/BonusEscrow.sol:BonusEscrow",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 32,
            "contract": "contracts/BonusEscrow.sol:BonusEscrow",
            "label": "creator",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 34,
            "contract": "contracts/BonusEscrow.sol:BonusEscrow",
            "label": "title",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 36,
            "contract": "contracts/BonusEscrow.sol:BonusEscrow",
            "label": "githubUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 38,
            "contract": "contracts/BonusEscrow.sol:BonusEscrow",
            "label": "reward",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 41,
            "contract": "contracts/BonusEscrow.sol:BonusEscrow",
            "label": "status",
            "offset": 0,
            "slot": "5",
            "type": "t_enum(Status)49"
          },
          {
            "astId": 43,
            "contract": "contracts/BonusEscrow.sol:BonusEscrow",
            "label": "acceptor",
            "offset": 1,
            "slot": "5",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}